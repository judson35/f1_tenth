[01m[K/home/judson35/f1_tenth/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kdouble WallFollow::get_range(std::vector<float>, double)[m[Kâ€™:
[01m[K/home/judson35/f1_tenth/sim_ws/src/wall_follow/src/wall_follow_node.cpp:66:27:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<float>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   66 |         for (int i = 0; [01;35m[Ki < range_data.size()[m[K; i++) {
      |                         [01;35m[K~~^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/judson35/f1_tenth/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kvoid WallFollow::scan_callback(sensor_msgs::msg::LaserScan_<std::allocator<void> >::ConstSharedPtr)[m[Kâ€™:
[01m[K/home/judson35/f1_tenth/sim_ws/src/wall_follow/src/wall_follow_node.cpp:144:16:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kvelocity[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  144 |         double [01;35m[Kvelocity[m[K = 0.0; // TODO: calculate desired car velocity based on error
      |                [01;35m[K^~~~~~~~[m[K
